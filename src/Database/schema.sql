--DROP SCHEMA IF EXISTS pyblocks CASCADE;
--CREATE SCHEMA pyblocks;
SET SEARCH_PATH TO pyblocks;

-- User information table
CREATE TABLE user_info(
    id SERIAL NOT NULL,
    first_name varchar NOT NULL,
    last_name varchar NOT NULL,
    email varchar NOT NULL,
    password varchar NOT NULL,
    PRIMARY KEY(id)
);

--"user_progress" table schema: 
-- Generated by the database client.
CREATE TABLE user_progress(
    progress_id SERIAL NOT NULL,
    user_id integer NOT NULL,
    project1_progress numeric(5,2),
    project2_progress numeric(5,2),
    project3_progress numeric(5,2),
    last_updated timestamp without time zone DEFAULT now(),
    workspace_state jsonb,
    PRIMARY KEY(progress_id),
    CONSTRAINT user_progress_user_id_fkey FOREIGN key(user_id) REFERENCES user_info(id),
    CONSTRAINT user_progress_project1_progress_check CHECK (((project1_progress >= (0)::numeric) AND (project1_progress <= (100)::numeric))),
    CONSTRAINT user_progress_project2_progress_check CHECK (((project2_progress >= (0)::numeric) AND (project2_progress <= (100)::numeric))),
    CONSTRAINT user_progress_project3_progress_check CHECK (((project3_progress >= (0)::numeric) AND (project3_progress <= (100)::numeric)))
);
CREATE UNIQUE INDEX user_progress_user_id_unique ON user_progress USING btree ("user_id");

--"user_settings" table schema: 
-- Generated by the database client.
CREATE TABLE user_settings(
    settings_id SERIAL NOT NULL,
    user_id integer NOT NULL,
    dark_mode boolean DEFAULT false,
    high_contrast boolean DEFAULT false,
    font_size integer DEFAULT 14,
    last_updated timestamp without time zone DEFAULT now(),
    PRIMARY KEY(settings_id),
    CONSTRAINT user_settings_user_id_fkey FOREIGN key(user_id) REFERENCES user_info(id),
    CONSTRAINT user_settings_font_size_check CHECK (((font_size >= 12) AND (font_size <= 24)))
);
CREATE UNIQUE INDEX user_settings_user_id_unique ON user_settings USING btree ("user_id");
