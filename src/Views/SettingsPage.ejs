<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PyBlocks Settings</title>
    <link href='/StylesPages/SettingsStyle.css' rel='stylesheet'>
    <link rel="stylesheet" href="/StylesPages/accessibilityStyles.css">
    <!-- Include the settings handler script -->
    <script src="/Scripts/settingsHandler.js" defer></script>
    <script src="/Scripts/ErrorHandler.js" defer></script>
</head>    
<body>
<!-- NAV BAR START -->
<header class="navigation" role="banner">

  <!-- List for the logo on the page -->
  <nav aria-label="Main Navigation">
  <ul class="navbar_logo">
    <li>
      <a href="/api/home">
        <img class = logo src = "/ImagesUsed/pyBlocks_Updated.png" alt = "PyBlocks logo, linking back to home page">
      </a>
    </li>
  </ul>

  <!-- List for the Buttons on the navigation pane -->
  <ul class="navbar_buttons_list">
    <li>
      <a href ="#contact" aria-label="Contact Us page (Coming soon)">
        <button class="Nav_Buttons" aria-disabled="true">Contact Us</button> <!-- TBC in another sprint -->
      </a>
    </li>
    <li>
      <a href="/api/tutorials" aria-label="Tutorials page (Coming soon)">
        <button class="Nav_Buttons" aria-disabled="true">Tutorials</button> <!-- TBC in another sprint -->
      </a>
    </li>
    <li>
      <a href = "/api/play">
        <button class="Nav_Buttons" aria-label="Start coding by going to the Play page">Play</button>
      </a>
    </li>
    <li>
      <a href="#courses" aria-label="Courses page (Coming soon)">
        <button class="Nav_Buttons" aria-disabled="true">Courses</button> <!-- TBC in another sprint -->
      </a>
    </li>
    <li>
      <a href="/api/resources" aria-label="Resources page (Coming soon)">
        <button class="Nav_Buttons" aria-disabled="true">Resources</button> <!-- TBC in another sprint -->
      </a>
    </li>
    <li>
      <% if (locals.user && locals.user !== null) { %>
        <a href="/api/dashboard">
          <button class="Nav_Buttons" aria-label="Go to dashboard">Dashboard</button>
        </a>
      <% } else { %>
        <a href="/api/login">
          <button class="Nav_Buttons" aria-label="Sign in to your account">Sign In</button>
        </a>
      <% } %>
    </li>
    <li>
      <a href="/api/register">
        <button class="Nav_Buttons">Register</button>
      </a>
    </li>
    <!-- Updated HTML for Settings Icon -->
<ul class="Settings_logo">
  <li>
    <a href="/api/settings">
      <img class="Settings_logo" src="/ImagesUsed/SettingsIcon.png" alt="Settings logo, linking to settings page">
    </a>
  </li>
    </ul>

  </ul>
</nav>
</header>
<!-- NAV BAR END -->

<!-- BODY START -->
      <main class="page_body">
        <h1 class="page_title">Settings</h1>
        
        <!-- Hidden input to indicate if user is logged in -->
        <input type="hidden" name="isLoggedIn" value="<%= locals.user ? 'true' : 'false' %>">
        
        <form class="Settings_Form" aria-labelledby="settingsForm" id="settingsForm">
          <fieldset>
            <legend id="settingsForm" class="visually-hidden">Settings Form</legend>

            <!-- Color Contrast Toggle -->
            <div class="Form_Group">
                <label for="colorContrastToggle">Color Contrast:</label>
                <input type="checkbox" id="colorContrastToggle" aria-label="Toggle high contrast mode">
            </div>

            <!-- Dark Mode Toggle -->
            <div class="Form_Group">
                <label for="darkModeToggle">Dark Mode:</label>
                <input type="checkbox" id="darkModeToggle" aria-label="Toggle dark mode">
            </div>

            <!-- Font Size Setting -->
            <div class="Form_Group">
                <label for="fontSizeSetting">Font Size:</label>
                <input type="range" id="fontSizeSetting" min="12" max="24" step="2" aria-label="Adjust font size">
            </div>
            
            <div class="Form_Group Button_Center">
                <button type="submit" class="Save_Button" aria-label="Save settings">Save</button>
            </div>
          </fieldset>
        </form>
      </main>
<!-- BODY END -->

<!-- FOOTER START -->
<footer role="contentinfo">
  <ul class="navbar_logo">
    <li><a href="/api/home"><img class="logo" src="/ImagesUsed/pyBlocks_Updated.png" alt="PyBlocks logo, linking back to home page"></a></li>
  </ul>
  <ul class="footer_buttons">
    <li><a href="/api/resources" aria-label="Resources section (Coming soon)">Resources</a></li>
    <li><a href="/api/tutorials" aria-label="Tutorials section (Coming soon)">Tutorials</a></li>
    <li><a href="#editors" aria-label="Open blank editors (Coming soon)">Open Blank Editors</a></li>
  </ul>
</footer>
<!-- FOOTER END -->

<script>
  // Add form submission handler
  document.getElementById('settingsForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const settings = {
      darkMode: document.getElementById('darkModeToggle').checked,
      highContrast: document.getElementById('colorContrastToggle').checked,
      fontSize: document.getElementById('fontSizeSetting').value
    };
    
    // Save to sessionStorage
    sessionStorage.setItem('darkMode', settings.darkMode);
    sessionStorage.setItem('highContrast', settings.highContrast);
    sessionStorage.setItem('fontSize', settings.fontSize);
    
    // Apply settings immediately
    applySettings(settings);
    
    // Check if user is logged in
    const isLoggedIn = document.querySelector('input[name="isLoggedIn"]').value === 'true';
    
    if (isLoggedIn) {
      try {
        // If user is logged in, save to their account
        const response = await fetch('/api/save-settings', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(settings)
        });
        
        if (response.ok) {
          showAccessibleErrorMessage('Settings saved successfully!', 'settingsErrorContainer');
        } else {
          showAccessibleErrorMessage('Failed to save settings to your account.', 'settingsErrorContainer');
        }
      } catch (error) {
        console.error('Error saving settings:', error);
        showAccessibleErrorMessage('An error occurred while saving settings.', 'settingsErrorContainer');
      }
    } else {
      showAccessibleErrorMessage('Settings saved to this browser only. Log in to save settings to your account.', 'settingsErrorContainer');
    }
  });
</script>
</body>
</html>